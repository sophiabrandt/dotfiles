[core]
  whitespace = trailing-space,space-before-tab
  editor = nvim
  excludesfile = $HOME/.gitignore_global
  pager = delta
  attributesfile = $HOME/.gitattributes
[interactive]
  diffFilter = delta --color-only
[diff]
  renames = copies
  colorMoved = default
  mnemonicprefix = true
  tool = vimdiff
  prompt = false
[delta]
  features = side-by-side line-numbers decorations
  whitespace-error-style = 22 reverse
  inspect-raw-lines = false
  plus-style = syntax "#003800"
  minus-style = syntax "#3f0001"
[delta "decorations"]
  commit-decoration-style = bold yellow box ul
  file-style = bold yellow ul
  file-decoration-style = none
  hunk-header-decoration-style = cyan box ul
[delta "line-numbers"]
  line-numbers-left-style = cyan
  line-numbers-right-style = cyan
  line-numbers-minus-style = 124
  line-numbers-plus-style = 28
[branch]
  autosetupmerge = true
[push]
  default = tracking
[rerere]
  enabled = true
# set "nvim" as tool for merging
[merge]
  stat = true
  tool = nvim
# define command which will be used when "nvim" is set as a merge tool
[mergetool "nvim"]
  cmd = nvim -f -c \"Gvdiffsplit!\" \"$MERGED\"
# automatically launch merge tool without displaying a prompt
[mergetool]
  prompt = false
[pull]
  rebase = false
[alias]
  # Git Commit, and Push — in one step.
  cmp = "!f() { git commit -m \"$@\"; }; f"
  # NEW.
  new = "!f() { git cmp \"📦 NEW: $@\"; }; f"
  # IMPROVE.
  imp = "!f() { git cmp \"👌 IMPROVE: $@\"; }; f"
  # FIX.
  fix = "!f() { git cmp \"🐛 FIX: $@\"; }; f"
  # RELEASE.
  rlz = "!f() { git cmp \"🚀 RELEASE: $@\"; }; f"
  # DOC.
  doc = "!f() { git cmp \"📖 DOC: $@\"; }; f"
  # TEST.
  tst = "!f() { git cmp \"🤖 TEST: $@\"; }; f"
  # BREAKING CHANGE.
  brk = "!f() { git cmp \"‼️ BREAKING: $@\"; }; f"
  # Logline
  lol = log --graph --decorate --oneline
  lola = log --graph --decorate --oneline --all
  # Diff, Status
  df = diff --color=always --color-words --abbrev
  st = status -s
  last = log -1 HEAD
  unstage = reset HEAD --
  pj = !which onefetch && onefetch
[color]
  ui = auto
  diff = auto
  status = auto
  interactive = auto
  pager = true
[init]
  defaultBranch = main
