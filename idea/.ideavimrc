"" Source your .vimrc
" source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" clipboard
set clipboard^=unnamed,unnamedplus,ideaput

" Ignore case
set ignorecase

" Don't use Ex mode, use Q for formatting.
map Q gq

""" Leader ------------------
let mapleader=" "
nnoremap <space> <nop>

""" Plugins  --------------------------------
set NERDTree
set ReplaceWithRegister
set argtextobj
set commentary
set easymotion
set exchange
set highlightedyank
set matchit
set surround
set textobj-entire
set textobj-indent
set vim-paragraph-motion


""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"
let g:EasyMotion_smartcase = 1

""" Common settings -------------------------
set showmode
set so=5
set incsearch
set nu

""" Manage .ideavimrc ---------------
nnoremap \e :e ~/.ideavimrc<CR>
nnoremap \v :action IdeaVim.ReloadVimRc.reload<CR>

""" Insert mappings ------------------
inoremap hsr =>
inoremap nra ->

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep

""" Plugin Mappings --------------------------------
map  ; <Plug>(easymotion-sn)
omap ; <Plug>(easymotion-tn)
nmap s <Plug>(easymotion-s2)
nmap S <Plug>(easymotion-s) 
nmap t <Plug>(easymotion-t2)
nmap T <Plug>(easymotion-T2)

map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)

nnoremap ,t :NERDTree<CR>

""" Distraction Free Mode -------------------
nnoremap <C-z> :action ToggleDistractionFreeMode<CR>
""" Terminal -------------------
nnoremap <C-t> :action ActivateTerminalToolWindow<CR>
nnoremap <leader>i :action Terminal.OpenInTerminal<CR>
""" Navigation -------------------
nnoremap <C-\> :action SplitVertically<CR>
nnoremap <C--> :action SplitHorizontally<CR>
nnoremap <C-=> :action Unsplit<CR>
nnoremap <C-m> :action MoveEditorToOppositeTabGroup<CR>
sethandler <C-j> a:vim
sethandler <C-k> a:vim
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <TAB> :action PreviousTab<CR>
nnoremap <s-TAB> :action NextTab<CR>
nnoremap <leader>en :action EditSourceInNewWindow<CR>
nnoremap <leader>n :action NextWindow<CR>
map <leader>x :action CloseContent<CR>
map <leader>X :action ReopenClosedTab<CR>
map <leader>qa :action CloseAllEditors<CR>
""" Editing source code -------------------
" make dot work on visual line selections.
xnoremap . :norm.<CR>
" Y should behave like D and C, from cursor till the end of line.
noremap Y y$
" U for redo, the opposite of u for undo.
nnoremap U <C-r>
"-----------------------------
" readline-like mappings
"-----------------------------
" - Ctrl-a - go to the start of line
" - Ctrl-e - go to the end of the line
" - Alt-b  - back a word
" - Alt-f  - forward a word
" - Alt-BS - delete backward word
" - Alt-d  - delete forward word
nnoremap B ^
nnoremap E $
inoremap <C-a>  <C-o>^
inoremap <C-e>  <C-o>$
inoremap <A-b>  <C-Left>
inoremap <A-f>  <C-Right>
inoremap <A-BS> <C-w>
inoremap <A-d>  <C-o>dw
" as above but for command mode.
cnoremap <C-a>  <Home>
cnoremap <C-e>  <End>
cnoremap <A-b>  <C-Left>
cnoremap <A-f>  <C-Right>
cnoremap <A-BS> <C-w>
cnoremap <A-d>  <C-Right><C-w>

vnoremap < <gv
vnoremap > >gv
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>
nnoremap zc :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
nnoremap <leader>y :action ShowIntentionActions<CR>
nnoremap <leader>zc :action CollapseAllRegions<CR>
nnoremap <leader>zo :action ExpandAllRegions<CR>
nnoremap <leader>c :action CommentByLineComment<CR>
nnoremap <leader>r :action RecentFiles<CR>
nnoremap <leader>f :action GotoFile<CR>
nnoremap <leader>g :action Generate<CR>
nnoremap <leader>h :action TogglePopupHints<CR>
nnoremap <leader>s :action SaveAll<CR>
nnoremap <leader>l :action Stylelint.Fix<CR>
nnoremap <leader>o :action OptimizeImports<CR>
nnoremap <leader>a :action Vcs.RollbackChangedLines<CR>
nnoremap <leader>d :action QuickJavaDoc<CR>
nnoremap <leader>q :action QuickTypeDefinition<CR>
nnoremap <leader>= :action ReformatCode<CR>
nnoremap ,a :action Annotate<CR>
nnoremap ,h :action LocalHistory.ShowHistory<CR>
nnoremap ,k :action Git.CompareWithBranch<CR>
nnoremap ,l :action RecentLocations<CR>
nnoremap ,p :action ReformatWithPrettierAction<CR>
nnoremap ,q :action Refactorings.QuickListPopupAction<CR>
nnoremap ,r :action RefactoringMenu<CR>
vnoremap ,q :action Refactorings.QuickListPopupAction<CR>
vnoremap ,r :action RefactoringMenu<CR>
nnoremap ]d :action GotoNextError<CR>
nnoremap [d :action GotoPreviousError<CR>
nnoremap ge :action ShowErrorDescription<CR>
""" Searching and Source Code Navigation -------------------
nnoremap <C-/> :action FindInPath<CR>
nnoremap <C-a> :action GotoAction<CR>
nnoremap <leader>u :action FindUsages<CR>
nnoremap <leader>s :action GotoRelated<CR>
nnoremap <leader>h :action CallHierarchy<CR>
nnoremap <leader>b :action ShowNavBar<CR>
nnoremap <C-s> :action FileStructurePopup<CR>
nnoremap <C-y> :action GotoSymbol<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gp :action GotoSuperMethod<CR>
nnoremap gt :action GotoTest<CR>
nnoremap gb :action Back<CR>
nnoremap gf :action Forward<CR>
nnoremap <C-S-g> :!echo % \| sed "s#${HOME}#~#"<CR>
""" Tool windows -------------------
nnoremap <C-p> :action JumpToLastWindow<CR>
nnoremap <C-q> :action HideAllWindows<CR>
""" Running and Debugging -------------------
nnoremap \c :action ContextRun<CR>
nnoremap \a :action RunClass<CR>
nnoremap \o :action ChooseRunConfiguration<CR>
nnoremap \t :action ActivateRunToolWindow<CR>
nnoremap \r :action Rerun<CR>
nnoremap \f :action RerunFailedTests<CR>
nnoremap \b :action ToggleLineBreakpoint<CR>
nnoremap \d :action ContextDebug<CR>
nnoremap \n :action ActivateDebugToolWindow<CR>

" Find more examples here: https://jb.gg/share-ideavimrc
