"" Source your .vimrc
" source ~/.vimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" clipboard
set clipboard^=unnamed,unnamedplus,ideaput

" Ignore case
set ignorecase

" Don't use Ex mode, use Q for formatting.
map Q gq

""" Leader ------------------
let mapleader=" "
nnoremap <space> <nop>

""" Plugins  --------------------------------
set NERDTree
set ReplaceWithRegister
set argtextobj
set commentary
set easymotion
set notimeout
set exchange
set highlightedyank
set matchit
set surround
set textobj-entire
set textobj-indent
set vim-paragraph-motion


""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"
let g:EasyMotion_smartcase = 1

""" Common settings -------------------------
set showmode
set incsearch
set nu

""" Manage .ideavimrc ---------------
nnoremap \e :e ~/.ideavimrc<CR>
nmap \v <Action>(IdeaVim.ReloadVimRc.reload)

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep

""" Plugin Mappings --------------------------------
map  ; <Plug>(easymotion-sn)
omap ; <Plug>(easymotion-tn)
nmap f <Plug>(easymotion-s2)
nmap F <Plug>(easymotion-s) 
nmap t <Plug>(easymotion-t2)
nmap T <Plug>(easymotion-T2)

map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)

nnoremap ,t :NERDTree<CR>
nnoremap ,c :NERDTreeClose<CR>

""" Distraction Free Mode -------------------
nmap <C-z> <Action>(ToggleDistractionFreeMode)
""" Terminal -------------------
nmap <C-t> <Action>(ActivateTerminalToolWindow)
nmap <leader>i <Action>(Terminal.OpenInTerminal)
""" Navigation -------------------
nmap <C-\> <Action>(SplitVertically)
nmap <C--> <Action>(SplitHorizontally)
nmap <C-=> <Action>(Unsplit)
nmap <C-m> <Action>(MoveEditorToOppositeTabGroup)
sethandler <C-j> a:vim
sethandler <C-k> a:vim
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nmap <TAB> <Action>(PreviousTab)
nmap <s-TAB> <Action>(NextTab)
nmap <leader>en <Action>(EditSourceInNewWindow)
nmap <leader>n <Action>(NextWindow)
map <leader>x <Action>(CloseContent)
map <leader>X <Action>(ReopenClosedTab)
map <leader>qa <Action>(CloseAllEditors)
""" Editing source code -------------------
" make dot work on visual line selections.
xnoremap . :norm.<CR>
" Y should behave like D and C, from cursor till the end of line.
noremap Y y$
" U for redo, the opposite of u for undo.
nnoremap U <C-r>
"-----------------------------
" readline-like mappings
"-----------------------------
" - Ctrl-a - go to the start of line
" - Ctrl-e - go to the end of the line
" - Alt-b  - back a word
" - Alt-f  - forward a word
" - Alt-BS - delete backward word
" - Alt-d  - delete forward word
nnoremap B ^
nnoremap E $
inoremap <C-a>  <C-o>^
inoremap <C-e>  <C-o>$
inoremap <A-b>  <C-Left>
inoremap <A-f>  <C-Right>
inoremap <A-BS> <C-w>
inoremap <A-d>  <C-o>dw
" as above but for command mode.
cnoremap <C-a>  <Home>
cnoremap <C-e>  <End>
cnoremap <A-b>  <C-Left>
cnoremap <A-f>  <C-Right>
cnoremap <A-BS> <C-w>
cnoremap <A-d>  <C-Right><C-w>

vnoremap < <gv
vnoremap > >gv
nmap [[ <Action>(MethodUp)
nmap ]] <Action>(MethodDown)
nmap zc <Action>(CollapseRegion)
nmap zo <Action>(ExpandRegion)
nmap <leader>p <Action>(PasteMultiple)
nmap <leader>zc <Action>(CollapseAllRegions)
nmap <leader>zo <Action>(ExpandAllRegions)
nmap <leader>c <Action>(CommentByLineComment)
nmap <leader>r <Action>(RecentFiles)
nmap <leader>f <Action>(GotoFile)
nmap <leader>gn <Action>(Generate)
nmap <leader>h <Action>(TogglePopupHints)
nmap <leader>s <Action>(SaveAll)
nmap <leader>l <Action>(Stylelint.Fix)
nmap <leader>a <Action>(Vcs.RollbackChangedLines)
nmap <leader>= <Action>(ReformatCode)
nmap ,a <Action>(Annotate)
nmap ,h <Action>(LocalHistory.ShowHistory)
nmap ,l <Action>(RecentLocations)
nmap ,p <Action>(ReformatWithPrettierAction)
nmap ,q <Action>(Refactorings.QuickListPopupAction)
nmap ,r <Action>(RefactoringMenu)
nmap ]d <Action>(GotoNextError)
nmap [d <Action>(GotoPreviousError)
nmap ]h <Action>(VcsShowNextChangeMarker)
nmap [h <Action>(VcsShowNextChangeMarker)
nmap ge <Action>(ShowErrorDescription)
nmap <leader>er <Action>(ShowErrorDescription)
nmap <leader>oi <Action>(OptimizeImports)
nmap <leader>rn <Action>(RenameElement)
nmap <leader>rf <Action>(RenameFile)
nmap <leader>ri <Action>(Inline)
nmap <leader>rv <Action>(IntroduceVariable)
nmap <leader>rm <Action>(ExtractMethod)
nmap <leader>rr <Action>(Refactorings.QuickListPopupAction)
nmap <leader>rp <Action>(IntroduceParameter)
nmap <leader>im <Action>(ImplementMethods)
nmap <leader>om <Action>(OverrideMethods)
nmap <leader>qf <Action>(ShowIntentionActions)
nmap <leader>qd <Action>(QuickJavaDoc)
nmap <leader>qt <Action>(QuickTypeDefinition)
nmap <leader>qi <Action>(QuickImplementations)
""" Git -------------
nmap ,k <Action>(Git.CompareWithBranch)
map <leader>gc <Action>(CheckinProject)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>gb <Action>(Git.Branches)
""" Popup navigation -------------------
imap <C-j> <Action>(PopupMenu-selectNext)
imap <C-k> <Action>(PopupMenu-selectPrev)
imap <C-y> <Action>(PopupMenu-return)
""" Searching and Source Code Navigation -------------------
nmap <C-/> <Action>(FindInPath)
nmap <C-a> <Action>(GotoAction)
nmap <leader>u <Action>(ShowUsages)
nmap <leader>U <Action>(FindUsages)
nmap <leader>s <Action>(GotoRelated)
nmap <leader>h <Action>(CallHierarchy)
nmap <leader>b <Action>(ShowNavBar)
nmap <C-s> <Action>(FileStructurePopup)
nmap <C-y> <Action>(GotoSymbol)
nmap <leader>fy <Action>(GotoSymbol)
nmap <leader>ff <Action>(GotoFile)
nmap <leader>fc <Action>(GotoClass)
nmap <leader>fa <Action>(GotoAction)
nmap <leader>fg <Action>(FindInPath)
nmap <leader>fr <Action>(ReplaceInPath)
nmap <leader>fs <Action>(NewScratchFile)
nmap gi <Action>(GotoImplementation)
nmap gd <Action>(GotoDeclaration)
nmap gp <Action>(GotoSuperMethod)
nmap gt <Action>(GotoTest)
nmap [b <Action>(Back)
nmap ]b <Action>(Forward)
nnoremap <C-S-g> :!echo % \| sed "s#${HOME}#~#"<CR>
""" Tool windows -------------------
nmap <C-p> <Action>(JumpToLastWindow)
nmap <C-q> <Action>(HideAllWindows)
""" Running and Debugging -------------------
nmap \c <Action>(ContextRun)
nmap \a <Action>(RunClass)
nmap \o <Action>(ChooseRunConfiguration)
nmap \t <Action>(ActivateRunToolWindow)
nmap \i <Action>(Run)
nmap \r <Action>(Rerun)
nmap \f <Action>(RerunFailedTests)
nmap \b <Action>(ToggleLineBreakpoint)
nmap \g <Action>(ContextDebug)
nmap \d <Action>(Debug)
nmap \n <Action>(ActivateDebugToolWindow)
nmap \m <Action>(MainMenu)

" Find more examples here: https://jb.gg/share-ideavimrc
